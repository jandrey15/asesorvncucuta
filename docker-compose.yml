version: "3"

services:
  wordpress:
    depends_on:
      - mysql
    image: wordpress:4.9.8
    restart: always
    # ports:
    #   - "5000:9000"
    networks:
      mynetwork:
        aliases:
          - admin.docker.test
          - api.docker.test
          - static.docker.test
          - api.johnserrano.xyz
          - static.johnserrano.xyz
    expose:
      - "5000"
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      WORDPRESS_DB_NAME: asesor
      # WORDPRESS_TABLE_PREFIX: asesorvn_
    volumes:
      - ./wordpress:/var/www/html

  mysql:
    image: mysql:5.7
    volumes:
      # - ../../../volumes/carros:/var/lib/mysql
      - ../../volumes/carros:/var/lib/mysql
    restart: always
    networks:
      - mynetwork
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "{MYSQL_PASSWORD}"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb_use_native_aio=0

  proxy:
    build: .
    depends_on:
      - wordpress
      - web
    restart: always
    networks:
      - mynetwork
    volumes:
      - ./logs:/var/log/nginx
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443

  web:
    build: ./web
    env_file:
      - web-variables.env
    restart: always
    networks:
      mynetwork:
        aliases:
          - docker.test
          - johnserrano.xyz
    # volumes:
    #   - ./web:/app
    # ports:
    #   - "3000:3000"
    expose:
      - "3000"
networks:
  mynetwork:
    driver: bridge
